
services:

  agendamentoseconsultas-postgres:
    container_name: agendamentoseconsultas-postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: agendamentoseconsultas-db
    networks:
      - microservice-network
    volumes:
      - agendamentoseconsultas-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  agendamentoseconsultas:
    container_name: agendamentoseconsultas-app-container
    image: agendamentoseconsultas-app-image
    build:
      context: ./agendamentoseconsultas
      dockerfile: Dockerfile
    restart: always
    depends_on:
      agendamentoseconsultas-postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://agendamentoseconsultas-postgres:5432/agendamentoseconsultas-db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    networks:
      - microservice-network

### Volumes ###
volumes:
  agendamentoseconsultas-data:

### Network ###
networks:
  microservice-network:
    driver: bridge